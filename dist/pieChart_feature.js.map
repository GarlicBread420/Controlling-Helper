{"version":3,"file":"pieChart_feature.js","mappings":"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","sources":["webpack://office-addin-taskpane/webpack/bootstrap","webpack://office-addin-taskpane/webpack/runtime/global","webpack://office-addin-taskpane/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane/webpack/runtime/publicPath","webpack://office-addin-taskpane/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane/./node_modules/@kurkle/color/dist/color.esm.js","webpack://office-addin-taskpane/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://office-addin-taskpane/./node_modules/chart.js/dist/chart.js","webpack://office-addin-taskpane/./src/library/featureUtils.ts","webpack://office-addin-taskpane/./node_modules/chart.js/auto/auto.js","webpack://office-addin-taskpane/./src/features/pieChart_feature/pieChart_feature.ts","webpack://office-addin-taskpane/./src/features/pieChart_feature/pieChart_feature.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t910: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.4\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.4\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.4\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import { Chart } from \"chart.js/auto\";\r\n\r\nexport function featureUtils() {}\r\n//ToDo: Add documentation to all functions\r\n\r\n/**\r\n * Get an array with all months\r\n *\r\n * @returns Array with months\r\n */\r\nfeatureUtils.getMonthArray = function () {\r\n  return [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n};\r\n\r\nfeatureUtils.getTestEmployeeArray = function () {\r\n  return [\"All Employees\", \"Employee 1\", \"Employee 2\", \"Employee 3\"];\r\n};\r\n\r\n/**\r\n * Populate a dropdown\r\n *\r\n * @param pValueArray     Array with Values that should be displayed in the dropdown\r\n * @param pElementId      ID of the dropdown\r\n */\r\nfeatureUtils.populateDropdown = function (pValueArray: string[], pElementId: string) {\r\n  const element = document.getElementById(pElementId);\r\n  pValueArray.forEach((value) => {\r\n    const option = document.createElement(\"option\");\r\n    option.value = value;\r\n    option.text = value;\r\n    element.appendChild(option);\r\n  });\r\n};\r\n\r\n/**\r\n * Return back to main screen\r\n *\r\n */\r\nfeatureUtils.goBack = function () {\r\n  window.location.href = \"../taskpane.html\";\r\n};\r\n\r\n/**\r\n * Create a select all checkbox\r\n *\r\n * @param pSource    Id of the source checkbox (the 'select all' box)\r\n * @param pElement   Name of the checkboxes that will be checked\r\n */\r\nfeatureUtils.selectAll = function (pSource: string, pElement: string) {\r\n  var source: HTMLElement = document.getElementById(pSource);\r\n\r\n  if (source instanceof HTMLInputElement) {\r\n    let checkboxes = document.getElementsByName(pElement);\r\n\r\n    for (let i = 0; i < checkboxes.length; i++) {\r\n      const currentCheckbox = checkboxes[i];\r\n\r\n      if (currentCheckbox instanceof HTMLInputElement) {\r\n        currentCheckbox.checked = source.checked;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Loads the basic pie chart\r\n * @returns the pie chart\r\n */\r\nfeatureUtils.loadPieChart = function () {\r\n  const xValues: string[] = [\"\"];\r\n  const yValues: number[] = [];\r\n  const barColors: string[] = [\"#8BC1F7\", \"#BDE2B9\", \"#A2D9D9\", \"#B2B0EA\", \"#F9E0A2\", \"#F4B678\"];\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: yValues,\r\n        backgroundColor: barColors,\r\n      },\r\n    ],\r\n    hoverOffset: 4,\r\n    labels: xValues,\r\n  };\r\n\r\n  var pieChart = new Chart(\"pieChart\", {\r\n    type: \"pie\",\r\n    data: data,\r\n    options: {\r\n      responsive: false,\r\n      maintainAspectRatio: false,\r\n      plugins: {\r\n        legend: {\r\n          position: \"top\",\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: \"Time\",\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  return pieChart;\r\n};\r\n\r\n/**\r\n * Add Data to a pie chart\r\n * \r\n * @param pChart chart where data should be added\r\n * @param pLabel label of the datasets\r\n * @param pNewData new data that should be added\r\n */\r\nfeatureUtils.addPieChartData = function (pChart: Chart<\"pie\", number[], string>, pLabel: string, pNewData) {\r\n  //push new label\r\n  pChart.data.labels.push(pLabel);\r\n\r\n  //push data\r\n  pChart.data.datasets.forEach((dataset) => {\r\n    dataset.data.push(pNewData);\r\n  });\r\n  pChart.update();\r\n};\r\n\r\n/**\r\n * Remove data from a pie chart\r\n * \r\n * @param pChart chart where data should be removed\r\n * @param pLabel label of the datasets\r\n * @param pData data that should be removed\r\n */\r\nfeatureUtils.removePieChartData = function (pChart: Chart<\"pie\", number[], string>, pLabel: string, pData) {\r\n  var removalIndexLabel = pChart.data.labels.indexOf(pLabel);\r\n  var removalIndexData = pChart.data.datasets.indexOf(pData);\r\n\r\n  pChart.data.labels.splice(removalIndexLabel, 1);\r\n\r\n  pChart.data.datasets.forEach((dataset) => {\r\n    dataset.data.splice(removalIndexData, 1);\r\n  });\r\n\r\n  pChart.update();\r\n};\r\n\r\n/**\r\n * Adds function to checkboxes that remove or add data\r\n * @param pSource id of the checkbox\r\n * @param pChart chart where data should be added/removed\r\n * @param pLabel label of the data\r\n * @param pData the data that should be added/removed\r\n */\r\nfeatureUtils.addRemoveDataCheckbox = function (\r\n  pSource: string,\r\n  pChart: Chart<\"pie\", number[], string>,\r\n  pLabel: string,\r\n  pData\r\n) {\r\n  var source: HTMLElement = document.getElementById(pSource);\r\n\r\n  source.addEventListener(\"change\", function () {\r\n    if (source instanceof HTMLInputElement) {\r\n      if (source.checked) {\r\n        featureUtils.addPieChartData(pChart, pLabel, pData);\r\n      } else {\r\n        featureUtils.removePieChartData(pChart, pLabel, pData);\r\n      }\r\n    }\r\n  });\r\n};","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import { featureUtils } from \"../../library/featureUtils\";\r\n\r\nvar pieChart = featureUtils.loadPieChart();\r\n\r\nOffice.onReady((info) => {\r\n  if (info.host === Office.HostType.Excel) {\r\n    document.getElementById(\"backButton\").onclick = featureUtils.goBack;\r\n    document.getElementById(\"selectAll\").onclick = () => featureUtils.selectAll(\"selectAll\", \"entries\");\r\n    featureUtils.populateDropdown(featureUtils.getTestEmployeeArray(), \"employeeSelect\");\r\n    featureUtils.populateDropdown(featureUtils.getMonthArray(), \"monthSelect\");\r\n    pieChart;\r\n    featureUtils.addRemoveDataCheckbox(\"entryOption1\", pieChart, \"gebuchte Tage\", 80)\r\n    featureUtils.addRemoveDataCheckbox(\"entryOption2\", pieChart, \"fakturierbare Tage\", 50);\r\n    featureUtils.addRemoveDataCheckbox(\"entryOption3\", pieChart, \"Urlaub\", 10);\r\n    featureUtils.addRemoveDataCheckbox(\"entryOption4\", pieChart, \"Krank\", 1);\r\n  }\r\n});\r\n\r\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./pieChart_feature.ts\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"./pieChart_feature.css\", import.meta.url);\n// Module\nvar code = \"<!doctype html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"/> <title>PieChart Feature</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script> <\" + \"script type=\\\"module\\\" src=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" defer=\\\"defer\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"\" + ___HTML_LOADER_IMPORT_1___ + \"\\\"/> </head> <body> <button id=\\\"backButton\\\">Back to Main</button> <h1>Pie Chart</h1> <div class=\\\"dataSelect\\\"> <div class=\\\"employeeSelect\\\"> <legend>Select Employees</legend> <br/> <select id=\\\"employeeSelect\\\"></select> </div> <div class=\\\"monthSelect\\\"> <legend>Select Month</legend> <br/> <select id=\\\"monthSelect\\\"></select> </div> </div> <br/> <div id=\\\"pieChartArea\\\"> <div id=\\\"pieChartContainer\\\"> <canvas id=\\\"pieChart\\\"> </canvas> </div> <div class=\\\"entrySelect\\\"> <legend>Select Entries</legend> <br/> <div class=\\\"checkboxContainer\\\"> <input type=\\\"checkbox\\\" id=\\\"selectAll\\\" checked=\\\"checked\\\"/> <label for=\\\"selectAll\\\">Select all</label> </div> <div class=\\\"checkboxContainer\\\"> <input type=\\\"checkbox\\\" id=\\\"entryOption1\\\" name=\\\"entries\\\" checked=\\\"checked\\\"> <label for=\\\"entryOption1\\\">gebuchte Tage</label> </div> <div class=\\\"checkboxContainer\\\"> <input type=\\\"checkbox\\\" id=\\\"entryOption2\\\" name=\\\"entries\\\" checked=\\\"checked\\\"> <label for=\\\"entryOption2\\\">fakturierbare Tage</label> </div> <div class=\\\"checkboxContainer\\\"> <input type=\\\"checkbox\\\" id=\\\"entryOption3\\\" name=\\\"entries\\\" checked=\\\"checked\\\"> <label for=\\\"entryOption3\\\">Urlaub</label> </div> <div class=\\\"checkboxContainer\\\"> <input type=\\\"checkbox\\\" id=\\\"entryOption4\\\" name=\\\"entries\\\" checked=\\\"checked\\\"> <label for=\\\"entryOption4\\\">Krank</label> </div> </div> </div> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","c","d","f","hex","h1","h2","eq","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","r","hueValue","calln","Array","isArray","map","hsl2rgb","hue","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","str","charAt","exec","rgbParse","p1","p2","hwb2rgb","hsv2rgb","hueParse","Color","constructor","type","ret","len","unpacked","keys","tkeys","j","ok","nk","parseInt","unpack","transparent","toLowerCase","nameParse","_rgb","_valid","valid","rgbString","hexString","isShort","alpha","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","toString","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","keyResolvers","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","useOffsetPos","shadowRoot","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","_boundSegments","segments","sub","readStyle","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","styleChanged","prevStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","aspectRatio","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","LineController","_dataset","_datasetIndex","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestCartesianItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","fullSize","setBoxDims","placeBoxes","userPadding","placed","stackWeight","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","buildStacks","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","bbWidth","bbHeight","margins","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","isConnected","Element","tooltipPosition","hasValue","final","newTicks","majorStart","majorEnd","ceil","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","determinedMaxTicks","_tickSize","maxScale","maxChart","determineMaxTicks","ticksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","setStyle","lineCap","lineJoin","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","LineElement","_path","_points","_segments","_pointsUpdated","segmentOptions","findStartAndEnd","chartContext","baseStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","doSplitByStyles","splitByStyles","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","segmentMethod","path","strokePathWithCache","strokePathDirect","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","fullCircles","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","inner","angleMargin","clipArc","BarElement","outer","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","boundingRects","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","getColorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_drawfill","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","generateTicks$1","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","LogarithmicScale","_zero","minExp","exp","startExp","lastTick","generateTicks","getTickBackdropHeight","determineLimits","updateLimits","limits","hLimits","vLimits","createPointLabelItem","itemOpts","outerDistance","drawingArea","extra","additionalAngle","pointLabelPosition","getPointPosition","yForAngle","getTextAlignForAngle","isNotOverlapped","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","centerPointLabels","_pointLabels","_pointLabelItems","valueCount","pointLabelOpts","getPointLabelContext","plFont","setCenterPoint","buildPointLabelItems","fitWithPointLabels","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","addedLabels","addIfString","lastIndexOf","findOrAddLabel","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","featureUtils","getMonthArray","getTestEmployeeArray","populateDropdown","pValueArray","pElementId","createElement","appendChild","goBack","selectAll","pSource","pElement","HTMLInputElement","checkboxes","getElementsByName","currentCheckbox","checked","loadPieChart","Chart","addPieChartData","pChart","pLabel","pNewData","removePieChartData","pData","removalIndexLabel","removalIndexData","addRemoveDataCheckbox","pieChart","Office","onReady","HostType","Excel","onclick","URL"],"sourceRoot":""}