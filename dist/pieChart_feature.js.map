{"version":3,"file":"pieChart_feature.js","mappings":"gKACIA,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CAGAJ,EAAoBO,EAAID,ECzBxBN,EAAoBQ,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBb,EAAoBc,EAAI,SAASC,EAAKC,GAAQ,OAAOC,OAAOC,UAAUC,eAAeC,KAAKL,EAAKC,EAAO,E,WCAtG,IAAIK,EACArB,EAAoBQ,EAAEc,gBAAeD,EAAYrB,EAAoBQ,EAAEe,SAAW,IACtF,IAAIC,EAAWxB,EAAoBQ,EAAEgB,SACrC,IAAKH,GAAaG,IACbA,EAASC,eAAkE,WAAjDD,EAASC,cAAcC,QAAQC,gBAC5DN,EAAYG,EAASC,cAAcG,MAC/BP,GAAW,CACf,IAAIQ,EAAUL,EAASM,qBAAqB,UAC5C,GAAGD,EAAQE,OAEV,IADA,IAAIC,EAAIH,EAAQE,OAAS,EAClBC,GAAK,KAAOX,IAAc,aAAaY,KAAKZ,KAAaA,EAAYQ,EAAQG,KAAKJ,GAE3F,CAID,IAAKP,EAAW,MAAM,IAAIa,MAAM,yDAChCb,EAAYA,EAAUc,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFnC,EAAoBoC,EAAIf,C,IClBxBrB,EAAoBqC,EAAIb,SAASc,SAAWC,KAAKhB,SAASiB,K,WCAnD,SAASC,IAAgB,CAQhCA,EAAaC,cAAgB,WAgB3B,MAfyB,CACvB,SACA,UACA,OACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,WAIJ,EAQAD,EAAaE,iBAAmB,SAAUC,EAAuBC,GAC/D,MAAMC,EAAUtB,SAASuB,eAAeF,GACxCD,EAAYI,SAASC,IACnB,MAAMC,EAAS1B,SAAS2B,cAAc,UACtCD,EAAOD,MAAQA,EACfC,EAAOE,KAAOH,EACdH,EAAQO,YAAYH,EAAO,GAE/B,EAMAT,EAAaa,OAAS,WACpBzC,OAAOU,SAASiB,KAAO,kBACzB,EAQAC,EAAac,UAAY,SAAUC,EAAiBC,GAClD,IAAIC,EAAsBlC,SAASuB,eAAeS,GAElD,GAAIE,aAAkBC,iBAAkB,CACtC,IAAIC,EAAapC,SAASqC,kBAAkBJ,GAE5C,IAAK,IAAIzB,EAAI,EAAGA,EAAI4B,EAAW7B,OAAQC,IAAK,CAC1C,MAAM8B,EAAkBF,EAAW5B,GAE/B8B,aAA2BH,mBAC7BG,EAAgBC,QAAUL,EAAOK,QAErC,CACF,CACF,ECrEAC,OAAOC,SAASC,IACVA,EAAKC,OAASH,OAAOI,SAASC,QAChC7C,SAASuB,eAAe,cAAcuB,QAAU7B,EAAaa,OAC7D9B,SAASuB,eAAe,aAAauB,QAAU,IAAM7B,EAAac,UAAU,YAAa,kBACzFd,EAAaE,iBAAiBF,EAAaC,gBAAiB,eAC9D,G,ICN+B,IAAI6B,IAAI,cACR,IAAIA,IAAI,a","sources":["webpack://office-addin-taskpane/webpack/bootstrap","webpack://office-addin-taskpane/webpack/runtime/global","webpack://office-addin-taskpane/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane/webpack/runtime/publicPath","webpack://office-addin-taskpane/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane/./src/library/featureUtils.ts","webpack://office-addin-taskpane/./src/features/pieChart_feature/pieChart_feature.ts","webpack://office-addin-taskpane/./src/features/pieChart_feature/pieChart_feature.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t910: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","export function featureUtils() {}\r\n//ToDo: Add documentation to all functions\r\n\r\n/**\r\n * Get an array with all months\r\n *\r\n * @returns {String[]}  Array with months\r\n */\r\nfeatureUtils.getMonthArray = function () {\r\n  const months: string[] = [\r\n    \"Januar\",\r\n    \"Februar\",\r\n    \"MÃ¤rz\",\r\n    \"April\",\r\n    \"Mai\",\r\n    \"Juni\",\r\n    \"Juli\",\r\n    \"August\",\r\n    \"September\",\r\n    \"Oktober\",\r\n    \"November\",\r\n    \"Dezember\",\r\n  ];\r\n\r\n  return months;\r\n};\r\n\r\n/**\r\n * Populate a dropdown\r\n *\r\n * @param {string[]} pValueArray     Array with Values that should be displayed in the dropdown\r\n * @param {string} pElementId        ID of the dropdown\r\n */\r\nfeatureUtils.populateDropdown = function (pValueArray: string[], pElementId: string) {\r\n  const element = document.getElementById(pElementId);\r\n  pValueArray.forEach((value) => {\r\n    const option = document.createElement(\"option\");\r\n    option.value = value;\r\n    option.text = value;\r\n    element.appendChild(option);\r\n  });\r\n};\r\n\r\n/**\r\n * Return back to main screen\r\n *\r\n */\r\nfeatureUtils.goBack = function () {\r\n  window.location.href = \"../taskpane.html\";\r\n};\r\n\r\n/**\r\n * Create a select all checkbox\r\n *\r\n * @param {string} pSource    Id of the source checkbox (the 'select all' box)\r\n * @param {string} pElement   Name of the checkboxes that will be checked\r\n */\r\nfeatureUtils.selectAll = function (pSource: string, pElement: string) {\r\n  var source: HTMLElement = document.getElementById(pSource);\r\n\r\n  if (source instanceof HTMLInputElement) {\r\n    let checkboxes = document.getElementsByName(pElement);\r\n\r\n    for (let i = 0; i < checkboxes.length; i++) {\r\n      const currentCheckbox = checkboxes[i];\r\n\r\n      if (currentCheckbox instanceof HTMLInputElement) {\r\n        currentCheckbox.checked = source.checked;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// featureUtils.loadPieChart = function () {\r\n//   const xValues = [\"Employee 1\", \"Employee 2\", \"Employee 3\"];\r\n//   const yValues = [55, 30, 25];\r\n//   const barColors = [\"#b91d47\", \"#00aba9\", \"#2b5797\"];\r\n\r\n//   new Chart(\"PieChart\", {\r\n//     type: \"pie\",\r\n//     data: {\r\n//       labels: xValues,\r\n//       datasets: [\r\n//         {\r\n//           backgroundColor: barColors,\r\n//           data: yValues,\r\n//         },\r\n//       ],\r\n//     },\r\n//     options: {\r\n//       title: {\r\n//         display: true,\r\n//         text: \"Gebuchte Tage\",\r\n//       },\r\n//     },\r\n//   });\r\n// };\r\n","import { featureUtils } from \"../../library/featureUtils\";\r\n\r\nOffice.onReady((info) => {\r\n  if (info.host === Office.HostType.Excel) {\r\n    document.getElementById(\"backButton\").onclick = featureUtils.goBack;\r\n    document.getElementById(\"selectAll\").onclick = () => featureUtils.selectAll(\"selectAll\", \"employeeSelect\");\r\n    featureUtils.populateDropdown(featureUtils.getMonthArray(), \"monthSelect\");\r\n  }\r\n});\r\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./pieChart_feature.ts\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"./pieChart_feature.css\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"/> <title>PieChart Feature</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script> <\" + \"script type=\\\"module\\\" src=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" defer=\\\"defer\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"\" + ___HTML_LOADER_IMPORT_1___ + \"\\\"/> </head> <body> <button id=\\\"backButton\\\">Back to Main</button> <h1>Pie Chart</h1> <div class=\\\"dataSelect\\\"> <div class=\\\"employeeSelect\\\"> <legend>Select Employees</legend> <br/> <input type=\\\"checkbox\\\" id=\\\"selectAll\\\"/> <label for=\\\"selectAll\\\">Select all</label> <br/> <input type=\\\"checkbox\\\" id=\\\"employee1\\\" name=\\\"employeeSelect\\\"/> <label for=\\\"employee1\\\">Employee 1</label> <br/> <input type=\\\"checkbox\\\" id=\\\"employee2\\\" name=\\\"employeeSelect\\\"/> <label for=\\\"employee2\\\">Employee 2</label> <br/> <input type=\\\"checkbox\\\" id=\\\"employee3\\\" name=\\\"employeeSelect\\\"/> <label for=\\\"employee3\\\">Employee 3</label> </div> <div class=\\\"monthSelect\\\"> <legend>Select Month</legend> <br/> <select id=\\\"monthSelect\\\"></select> </div> </div> <div id=\\\"PieChartContainer\\\"> <canvas id=\\\"PieChart\\\"> </canvas> </div> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","featureUtils","getMonthArray","populateDropdown","pValueArray","pElementId","element","getElementById","forEach","value","option","createElement","text","appendChild","goBack","selectAll","pSource","pElement","source","HTMLInputElement","checkboxes","getElementsByName","currentCheckbox","checked","Office","onReady","info","host","HostType","Excel","onclick","URL"],"sourceRoot":""}